using Microsoft.Extensions.Configuration;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace OneNoteExporter.AppConfig
{
    public class AppSettings
    {

        /// <summary>
        /// Debug mode bypasses processing of file
        /// </summary>
        public bool Debug { get; set; } = false;

        /// <summary>
        /// Thread count for parallel processing
        /// </summary>
        public int AppParallelismCount { get; set; } = 20;

        public string PanDocPath { get; set; }

        /// <summary>
        /// Name of the resource folder where attachments and image files are stored
        /// </summary>
        public string ExportedFilePath { get; set; } = "_resources";

        /// <summary>
        /// NoteBook to use as a filter
        /// </summary>
        public string NoteBookName { get; set; }
        
        /// <summary>
        /// Sectionnames to use a filter, leave blank for all
        /// </summary>
        public string SectionName { get; set; }

        /// <summary>
        /// Maximum number of characters of a page title. Among this limit, title is contracted.
        /// </summary>
        public int PageTitleMaxLength { get; set; } = 50;

  
        /// <summary>
        /// Length limit of Section and page name used in file and folder name. Reduce this value to avoid error of max file system file path
        /// </summary>
        public int MdMaxFileLength { get; set; } = 50;

    
        /// <summary>
        /// Copy DocX export of pages along md files
        /// Apply to : Markdown Format
        /// </summary>
        public bool DeleteOneNoteDocxFiles { get; set; } = false;
                
        

        /*
         * Markdown rendering Settings
         * */

        /// <summary>
        /// One of pandoc format https://pandoc.org/MANUAL.html#general-options
        /// Rq: For Joplin "gfm" is recommended
        /// </summary>
        public string PanDocMarkdownFormat { get; set; } = "gfm";

        /// <summary>
        /// Convert HTML IMG tag generated by PanDoc into markdown references
        /// </summary>
        public bool PostProcessingMdImgRef { get; set; } = true;

        /// <summary>
        /// Remove undesired quotation blocks sometimes generated by PanDoc
        /// </summary>
        public bool PostProcessingRemoveQuotationBlocks { get; set; } = true;

        /// <summary>
        /// Remove OneNote header generated by OneNote Export APIs
        /// </summary>
        public bool PostProcessingRemoveOneNoteHeader { get; set; } = true;

        /// <summary>
        /// Replace every pair of linebreak by a single linebreak (to avoid duplicates generated by Pandoc)
        /// </summary>
        public bool DeduplicateLinebreaks { get; set; } = true;

        /// <summary>
        /// Prevent generation of more that 2 linebreaks in a row
        /// </summary>
        public bool MaxTwoLineBreaksInARow { get; set; } = true;

        


        public static AppSettings LoadAppSettings()
        {
            IConfigurationRoot configRoot = new ConfigurationBuilder()
                .AddJsonFile("appsettings.json")
                .Build();
            AppSettings appSettings = configRoot.Get<AppSettings>();
            return appSettings;
        }
    }
}
